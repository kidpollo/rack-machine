
###############################################################################
# Monit configuration file
###############################################################################
#
# Dependancies:
#
# - Properly configured and installed postfix
# - mailutils
# - "send_monitoring_status_by_mail" Sends a notification by mail!
#   ( should do a $ chmod +x send_monitoring_status_by_mail )
#
# Note: [ - DO NOT EDIT - ] This file is autogenerated!
#
# Last Update on: <%= Time.now %>

###############################################################################
# Global section
###############################################################################
#
# Start monit in the background (run as a daemon):
#
set daemon  <%= @monit[:run_every] %>  # check services at 2-minute intervals

###############################################################################
# Monit logging
###############################################################################
#
# Set to system log
#
set logfile syslog facility log_daemon

###############################################################################
# Mail server config
###############################################################################
#
# Use localhost to send email.
#
set mailserver localhost

###############################################################################
# Recipients for alerts
###############################################################################
#
# Eeach recipient defined here will be deployed.
#
<% @monit[:recipients].each do |recipient| %>
set alert <%= recipient %>
<% end %>

###############################################################################
# Monit gui
###############################################################################
#
# Monit has an embedded web server which can be used to view status of
# services monitored, the current configuration, actual services parameters
# and manage services from a web interface.
#
set httpd port 2812 and
    use address localhost  # only accept connection from localhost
    allow localhost        # allow localhost to connect to the server and
    allow <%= @monit[:http_user] %>:<%= @monit[:http_pass] %>
    allow @monit           # allow users of group 'monit' to connect (rw)
    allow @users readonly  # allow users of group 'users' to connect readonly


###############################################################################
# Services
###############################################################################
#
#  Check general system resources such as load average, cpu and memory
#  usage. Each test specifies a resource, conditions and the action to be
#  performed should a test fail.
#
check system <%= @hostname %>
  if loadavg (<%= @monit[:small_load_avg_time] %>) > <%= @monit[:small_load_avg_level] %> then alert
  if loadavg (<%= @monit[:big_load_avg_time] %>) > <%= @monit[:big_load_avg_level] %> then alert
  if memory usage > <%= @monit[:general_memory_usage] %> then alert
  if cpu usage (user) > <%= @monit[:cpu_usage_user] %> then alert
  if cpu usage (system) > <%= @monit[:cpu_usage_system] %> then alert
  if cpu usage (wait) > <%= @monit[:cpu_usage_wait] %> then alert


###############################################################################
# Disk usage monitoring
###############################################################################
#
# Note: check the double sintax. We might need just one! since exec
# already triggers and alert! (ain't sure about this)
#
check device system_disk_space with path /
  if space usage > 50%
    then alert
  if space usage > 50%
    then exec "/tmp/send_monitoring_status_by_mail"


###############################################################################
# Includes
###############################################################################
#
# Include default-global configurations
#
include /etc/monit.d/*
